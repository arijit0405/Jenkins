pipeline {
    agent {
        docker {
            image 'abhishekf5/maven-abhishek-docker-agent:v1'
            args '--user root -v /var/run/docker.sock:/var/run/docker.sock -v "${WORKSPACE}:/workspace" -w /workspace --entrypoint /bin/sh'
            // Remove customWorkspace since it’s not fully overriding the default behavior
        }
    }

    environment {
        SONAR_URL = "http://host.docker.internal:9000"
        DOCKER_IMAGE = "arijit2001/spring-boot-app:${BUILD_NUMBER}"
        GIT_REPO_NAME = "jenkins"
        GIT_USER_NAME = "arijit0405"
        PROJECT_DIR = "java-maven-sonar-argocd-helm-k8s/spring-boot-app"
    }

    stages {
        stage('Checkout') {
            steps {
                checkout scm
            }
        }

        stage('Build and Test') {
            steps {
                sh "cd ${PROJECT_DIR} && mvn clean package"
            }
        }

        stage('Static Code Analysis') {
            steps {
                withCredentials([string(credentialsId: 'sonarqube', variable: 'SONAR_AUTH_TOKEN')]) {
                    sh "cd ${PROJECT_DIR} && mvn sonar:sonar -Dsonar.login=${SONAR_AUTH_TOKEN} -Dsonar.host.url=${SONAR_URL}"
                }
            }
        }

        stage('Build and Push Docker Image') {
            steps {
                script {
                    sh "cd ${PROJECT_DIR} && docker build -t ${DOCKER_IMAGE} ."
                    withCredentials([usernamePassword(credentialsId: 'docker-hub-credentials', usernameVariable: 'DOCKER_USERNAME', passwordVariable: 'DOCKER_PASSWORD')]) {
                        sh """
                            docker login -u ${DOCKER_USERNAME} -p ${DOCKER_PASSWORD}
                            docker push ${DOCKER_IMAGE}
                        """
                    }
                }
            }
        }

        stage('Update Deployment File') {
            steps {
                withCredentials([string(credentialsId: 'github-token', variable: 'GITHUB_TOKEN')]) {
                    sh """
                        git config user.email "arijitchakraborty691@gmail.com"
                        git config user.name "Arijit"
                        sed -i "s/replaceImageTag/${BUILD_NUMBER}/g" java-maven-sonar-argocd-helm-k8s/spring-boot-app-manifests/deployment.yml
                        git add java-maven-sonar-argocd-helm-k8s/spring-boot-app-manifests/deployment.yml
                        git commit -m "Update deployment image to version ${BUILD_NUMBER}"
                        git push https://${GITHUB_TOKEN}@github.com/${GIT_USER_NAME}/${GIT_REPO_NAME}.git HEAD:main
                    """
                }
            }
        }
    }

    post {
        success {
            echo "✅ Build and deployment pipeline completed successfully."
        }
        failure {
            echo "❌ Build or deployment failed. Check logs."
        }
    }
}
