pipeline {
  agent {
    docker {
      image 'abhishekf5/maven-abhishek-docker-agent:v1'
      args '--user root -v /var/run/docker.sock:/var/run/docker.sock'
    }
  }

  environment {
    SONAR_URL = "http://host.docker.internal:9000"
    DOCKER_IMAGE = "arijit2001/ultimate-cicd:${BUILD_NUMBER}"
    GIT_REPO_NAME = "your-repo-name"
    GIT_USER_NAME = "your-github-username"
  }

  stages {
    stage('Checkout') {
      steps {
        checkout scm
      }
    }

    stage('Build and Test') {
      steps {
        bat 'cd java-maven-sonar-argocd-helm-k8s\\spring-boot-app && mvn clean package'
      }
    }

    stage('Static Code Analysis') {
      steps {
        withCredentials([string(credentialsId: 'sonarqube', variable: 'SONAR_AUTH_TOKEN')]) {
          bat 'cd java-maven-sonar-argocd-helm-k8s\\spring-boot-app && mvn sonar:sonar -Dsonar.login=%SONAR_AUTH_TOKEN% -Dsonar.host.url=%SONAR_URL%'
        }
      }
    }

    stage('Build and Push Docker Image') {
      steps {
        script {
          bat 'cd java-maven-sonar-argocd-helm-k8s\\spring-boot-app && docker build -t %DOCKER_IMAGE% .'
          bat """
            docker login -u %USERNAME% -p %PASSWORD%
            docker push %DOCKER_IMAGE%
          """
        }
      }
    }

    stage('Update Deployment File') {
      steps {
        withCredentials([string(credentialsId: 'github', variable: 'GITHUB_TOKEN')]) {
          bat """
            git config user.email "youremail@example.com"
            git config user.name "Your Name"
            sed -i "s/replaceImageTag/%BUILD_NUMBER%/g" java-maven-sonar-argocd-helm-k8s\\spring-boot-app-manifests\\deployment.yml
            git add java-maven-sonar-argocd-helm-k8s\\spring-boot-app-manifests\\deployment.yml
            git commit -m "Update deployment image to version %BUILD_NUMBER%"
            git push https://%GITHUB_TOKEN%@github.com/%GIT_USER_NAME%/%GIT_REPO_NAME% HEAD:main
          """
        }
      }
    }
  }

  post {
    success {
      echo "✅ Build and deployment pipeline completed successfully."
    }
    failure {
      echo "❌ Build or deployment failed. Check logs."
    }
  }
}
